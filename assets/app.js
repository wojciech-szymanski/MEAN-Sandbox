angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc",function(o,t){o.$on("login",function(t,n){o.currentUser=n}),o.logout=function(){o.currentUser="",t.logout()},"undefined"!=typeof window.localStorage.token&&""!==window.localStorage.token&&t.getUser(window.localStorage.token).then(function(t){o.currentUser=t.data})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(o,t){o.login=function(n,e){t.login(n,e).then(function(t){o.$emit("login",t.data)})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(o,t){o.addPost=function(){o.postBody&&t.create({body:o.postBody}).success(function(){o.postBody=null})},t.fetch().success(function(t){o.posts=t}),o.$on("ws:new_post",function(t,n){o.$apply(function(){o.posts.unshift(n)})})}]),angular.module("app").service("PostsSvc",["$http",function(o){this.fetch=function(){return o.get("/api/posts")},this.create=function(t){return o.post("/api/posts",t)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(o,t){o.createUser=function(n,e,r){return e!==r?void alert("Password does not match"):void t.createUser(n,e).then(function(t){o.$emit("login",t.data)})}}]),angular.module("app").config(["$routeProvider",function(o){o.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(o){var t=this;t.getUser=function(t){return o.defaults.headers.common["X-Auth"]=t,o.get("/api/users")},t.login=function(n,e){return o.post("/api/sessions",{username:n,password:e}).then(function(o){return window.localStorage.token=o.data.token,t.getUser(o.data.token)})},t.logout=function(){return window.localStorage.token="",o.defaults.headers.common["X-Auth"]="",!0},t.createUser=function(n,e){return o.post("/api/users",{username:n,password:e}).then(function(){return t.login(n,e)})}}]),angular.module("app").run(["$rootScope","$timeout",function(o,t){!function n(){var e="ws://localhost:3000",r=new WebSocket(e);r.onclose=function(){console.log("WebSocket closed"),t(n,1e4)},r.onmessage=function(t){console.log(t);var n=JSON.parse(t.data);o.$broadcast("ws:"+n.topic,n.data)}}()}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJsb2dpbi5jdHJsLmpzIiwicG9zdHMuY3RybC5qcyIsInBvc3RzLnN2Yy5qcyIsInJlZ2lzdGVyLmN0cmwuanMiLCJyb3V0ZXMuanMiLCJ1c2VyLnN2Yy5qcyIsIndlYnNvY2tldHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBQSxPQUFBLE9BQ0EsWUNEQSxRQUFBLE9BQUEsT0FDQSxXQUFBLG1CQUFBLFNBQUEsVUFBQSxTQUFBLEVBQUEsR0FFQSxFQUFBLElBQUEsUUFBQSxTQUFBLEVBQUEsR0FDQSxFQUFBLFlBQUEsSUFHQSxFQUFBLE9BQUEsV0FDQSxFQUFBLFlBQUEsR0FDQSxFQUFBLFVBR0EsbUJBQUEsUUFBQSxhQUFBLE9BQUEsS0FBQSxPQUFBLGFBQUEsT0FDQSxFQUFBLFFBQUEsT0FBQSxhQUFBLE9BQ0EsS0FBQSxTQUFBLEdBQ0EsRUFBQSxZQUFBLEVBQUEsVUNmQSxRQUFBLE9BQUEsT0FDQSxXQUFBLGFBQUEsU0FBQSxVQUFBLFNBQUEsRUFBQSxHQUVBLEVBQUEsTUFBQSxTQUFBLEVBQUEsR0FDQSxFQUFBLE1BQUEsRUFBQSxHQUNBLEtBQUEsU0FBQSxHQUNBLEVBQUEsTUFBQSxRQUFBLEVBQUEsWUNOQSxRQUFBLE9BQUEsT0FDQSxXQUFBLGFBQUEsU0FBQSxXQUFBLFNBQUEsRUFBQSxHQUVBLEVBQUEsUUFBQSxXQUNBLEVBQUEsVUFDQSxFQUFBLFFBQ0EsS0FBQSxFQUFBLFdBQ0EsUUFBQSxXQUNBLEVBQUEsU0FBQSxRQUtBLEVBQUEsUUFBQSxRQUFBLFNBQUEsR0FDQSxFQUFBLE1BQUEsSUFHQSxFQUFBLElBQUEsY0FBQSxTQUFBLEVBQUEsR0FDQSxFQUFBLE9BQUEsV0FDQSxFQUFBLE1BQUEsUUFBQSxVQ25CQSxRQUFBLE9BQUEsT0FDQSxRQUFBLFlBQUEsUUFBQSxTQUFBLEdBRUEsS0FBQSxNQUFBLFdBQ0EsTUFBQSxHQUFBLElBQUEsZUFHQSxLQUFBLE9BQUEsU0FBQSxHQUNBLE1BQUEsR0FBQSxLQUFBLGFBQUEsT0NSQSxRQUFBLE9BQUEsT0FDQSxXQUFBLGdCQUFBLFNBQUEsVUFBQSxTQUFBLEVBQUEsR0FFQSxFQUFBLFdBQUEsU0FBQSxFQUFBLEVBQUEsR0FFQSxNQUFBLEtBQUEsTUFDQSxPQUFBLCtCQUlBLEdBQUEsV0FBQSxFQUFBLEdBQ0EsS0FBQSxTQUFBLEdBQ0EsRUFBQSxNQUFBLFFBQUEsRUFBQSxZQ1pBLFFBQUEsT0FBQSxPQUNBLFFBQUEsaUJBQUEsU0FBQSxHQUVBLEVBQ0EsS0FBQSxLQUNBLFdBQUEsWUFDQSxZQUFBLGVBRUEsS0FBQSxhQUNBLFdBQUEsZUFDQSxZQUFBLGtCQUVBLEtBQUEsVUFDQSxXQUFBLFlBQ0EsWUFBQSxrQkNkQSxRQUFBLE9BQUEsT0FDQSxRQUFBLFdBQUEsUUFBQSxTQUFBLEdBRUEsR0FBQSxHQUFBLElBRUEsR0FBQSxRQUFBLFNBQUEsR0FFQSxNQURBLEdBQUEsU0FBQSxRQUFBLE9BQUEsVUFBQSxFQUNBLEVBQUEsSUFBQSxlQUdBLEVBQUEsTUFBQSxTQUFBLEVBQUEsR0FDQSxNQUFBLEdBQUEsS0FBQSxpQkFDQSxTQUFBLEVBQ0EsU0FBQSxJQUNBLEtBQUEsU0FBQSxHQUVBLE1BREEsUUFBQSxhQUFBLE1BQUEsRUFBQSxLQUFBLE1BQ0EsRUFBQSxRQUFBLEVBQUEsS0FBQSxVQUlBLEVBQUEsT0FBQSxXQUdBLE1BRkEsUUFBQSxhQUFBLE1BQUEsR0FDQSxFQUFBLFNBQUEsUUFBQSxPQUFBLFVBQUEsSUFDQSxHQUdBLEVBQUEsV0FBQSxTQUFBLEVBQUEsR0FDQSxNQUFBLEdBQUEsS0FBQSxjQUNBLFNBQUEsRUFDQSxTQUFBLElBQ0EsS0FBQSxXQUNBLE1BQUEsR0FBQSxNQUFBLEVBQUEsU0MvQkEsUUFBQSxPQUFBLE9BQ0EsS0FBQSxhQUFBLFdBQUEsU0FBQSxFQUFBLElBQ0EsUUFBQSxLQUNBLEdBQUEsR0FBQSxzQkFDQSxFQUFBLEdBQUEsV0FBQSxFQUVBLEdBQUEsUUFBQSxXQUNBLFFBQUEsSUFBQSxvQkFDQSxFQUFBLEVBQUEsTUFFQSxFQUFBLFVBQUEsU0FBQSxHQUNBLFFBQUEsSUFBQSxFQUNBLElBQUEsR0FBQSxLQUFBLE1BQUEsRUFBQSxLQUNBLEdBQUEsV0FBQSxNQUFBLEVBQUEsTUFBQSxFQUFBIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImFuZ3VsYXIubW9kdWxlKFwiYXBwXCIsIFtcblx0XCJuZ1JvdXRlXCJcbl0pOyIsImFuZ3VsYXIubW9kdWxlKFwiYXBwXCIpXG4uY29udHJvbGxlcihcIkFwcGxpY2F0aW9uQ3RybFwiLCBmdW5jdGlvbiAoJHNjb3BlLCBVc2VyU3ZjKSB7XG5cblx0JHNjb3BlLiRvbihcImxvZ2luXCIsIGZ1bmN0aW9uIChfLCB1c2VyKSB7XG5cdFx0JHNjb3BlLmN1cnJlbnRVc2VyID0gdXNlcjtcblx0fSk7XG5cblx0JHNjb3BlLmxvZ291dCA9IGZ1bmN0aW9uICgpIHtcblx0XHQkc2NvcGUuY3VycmVudFVzZXIgPSBcIlwiO1xuXHRcdFVzZXJTdmMubG9nb3V0KCk7XG5cdH07XG5cblx0aWYgKHR5cGVvZiB3aW5kb3cubG9jYWxTdG9yYWdlLnRva2VuICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhbFN0b3JhZ2UudG9rZW4gIT09IFwiXCIpIHtcblx0XHRVc2VyU3ZjLmdldFVzZXIod2luZG93LmxvY2FsU3RvcmFnZS50b2tlbilcblx0XHRcdC50aGVuKGZ1bmN0aW9uICh1c2VyKSB7XG5cdFx0XHRcdCRzY29wZS5jdXJyZW50VXNlciA9IHVzZXIuZGF0YTtcblx0XHRcdH0pO1xuXHR9XG59KTsiLCJhbmd1bGFyLm1vZHVsZShcImFwcFwiKVxuLmNvbnRyb2xsZXIoXCJMb2dpbkN0cmxcIiwgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2Yykge1xuXG5cdCRzY29wZS5sb2dpbiA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcblx0XHRVc2VyU3ZjLmxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZClcblx0XHRcdC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuXHRcdFx0XHQkc2NvcGUuJGVtaXQoXCJsb2dpblwiLCByZXNwb25zZS5kYXRhKTtcblx0XHRcdH0pO1xuXHR9XG59KTsiLCJhbmd1bGFyLm1vZHVsZShcImFwcFwiKVxuLmNvbnRyb2xsZXIoXCJQb3N0c0N0cmxcIiwgZnVuY3Rpb24gKCRzY29wZSwgUG9zdHNTdmMpIHtcblxuXHQkc2NvcGUuYWRkUG9zdCA9IGZ1bmN0aW9uKCkge1xuXHRcdGlmICgkc2NvcGUucG9zdEJvZHkpIHtcblx0XHRcdFBvc3RzU3ZjLmNyZWF0ZSh7XG5cdFx0XHRcdGJvZHk6ICRzY29wZS5wb3N0Qm9keVxuXHRcdFx0fSkuc3VjY2VzcyhmdW5jdGlvbiAocG9zdCkge1xuXHRcdFx0XHQkc2NvcGUucG9zdEJvZHkgPSBudWxsO1xuXHRcdFx0fSlcblx0XHR9XG5cdH1cblxuXHRQb3N0c1N2Yy5mZXRjaCgpLnN1Y2Nlc3MoZnVuY3Rpb24gKHBvc3RzKSB7XG5cdFx0JHNjb3BlLnBvc3RzID0gcG9zdHM7XG5cdH0pO1xuXG5cdCRzY29wZS4kb24oXCJ3czpuZXdfcG9zdFwiLCBmdW5jdGlvbiAoXywgcG9zdCkge1xuXHRcdCRzY29wZS4kYXBwbHkoZnVuY3Rpb24gKCkge1xuXHRcdFx0JHNjb3BlLnBvc3RzLnVuc2hpZnQocG9zdClcblx0XHR9KVxuXHR9KTtcbn0pOyIsImFuZ3VsYXIubW9kdWxlKFwiYXBwXCIpXG4uc2VydmljZShcIlBvc3RzU3ZjXCIsIGZ1bmN0aW9uICgkaHR0cCkge1xuXG5cdHRoaXMuZmV0Y2ggPSBmdW5jdGlvbiAoKSB7XG5cdFx0cmV0dXJuICRodHRwLmdldChcIi9hcGkvcG9zdHNcIik7XG5cdH1cblxuXHR0aGlzLmNyZWF0ZSA9IGZ1bmN0aW9uIChwb3N0KSB7XG5cdFx0cmV0dXJuICRodHRwLnBvc3QoXCIvYXBpL3Bvc3RzXCIsIHBvc3QpO1xuXHR9XG59KTsiLCJhbmd1bGFyLm1vZHVsZShcImFwcFwiKVxuLmNvbnRyb2xsZXIoXCJSZWdpc3RlckN0cmxcIiwgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2Yykge1xuXG5cdCRzY29wZS5jcmVhdGVVc2VyID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCwgY29uZmlybSkge1xuXG5cdFx0aWYgKHBhc3N3b3JkICE9PSBjb25maXJtKSB7XG5cdFx0XHRhbGVydChcIlBhc3N3b3JkIGRvZXMgbm90IG1hdGNoXCIpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdFVzZXJTdmMuY3JlYXRlVXNlcih1c2VybmFtZSwgcGFzc3dvcmQpXG5cdFx0XHQudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcblx0XHRcdFx0JHNjb3BlLiRlbWl0KFwibG9naW5cIiwgcmVzcG9uc2UuZGF0YSk7XG5cdFx0XHR9KTtcblx0fVxufSk7IiwiYW5ndWxhci5tb2R1bGUoXCJhcHBcIilcblx0LmNvbmZpZyhmdW5jdGlvbiAoJHJvdXRlUHJvdmlkZXIpIHtcblxuXHRcdCRyb3V0ZVByb3ZpZGVyXG5cdFx0LndoZW4oXCIvXCIsIHtcblx0XHRcdFwiY29udHJvbGxlclwiOiBcIlBvc3RzQ3RybFwiLFxuXHRcdFx0XCJ0ZW1wbGF0ZVVybFwiOiBcInBvc3RzLmh0bWxcIlxuXHRcdH0pXG5cdFx0LndoZW4oXCIvcmVnaXN0ZXJcIiwge1xuXHRcdFx0XCJjb250cm9sbGVyXCI6IFwiUmVnaXN0ZXJDdHJsXCIsXG5cdFx0XHRcInRlbXBsYXRlVXJsXCI6IFwicmVnaXN0ZXIuaHRtbFwiXG5cdFx0fSlcblx0XHQud2hlbihcIi9sb2dpblwiLCB7XG5cdFx0XHRcImNvbnRyb2xsZXJcIjogXCJMb2dpbkN0cmxcIixcblx0XHRcdFwidGVtcGxhdGVVcmxcIjogXCJsb2dpbi5odG1sXCJcblx0XHR9KVxuXHR9KTsiLCJhbmd1bGFyLm1vZHVsZShcImFwcFwiKVxuLnNlcnZpY2UoXCJVc2VyU3ZjXCIsIGZ1bmN0aW9uICgkaHR0cCkge1xuXG5cdHZhciBzdmMgPSB0aGlzO1xuXG5cdHN2Yy5nZXRVc2VyID0gZnVuY3Rpb24gKHRva2VuKSB7XG5cdFx0JGh0dHAuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bXCJYLUF1dGhcIl0gPSB0b2tlbjtcblx0XHRyZXR1cm4gJGh0dHAuZ2V0KFwiL2FwaS91c2Vyc1wiKTtcblx0fVxuXG5cdHN2Yy5sb2dpbiA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcblx0XHRyZXR1cm4gJGh0dHAucG9zdChcIi9hcGkvc2Vzc2lvbnNcIiwge1xuXHRcdFx0XCJ1c2VybmFtZVwiOiB1c2VybmFtZSxcblx0XHRcdFwicGFzc3dvcmRcIjogcGFzc3dvcmRcblx0XHR9KS50aGVuKGZ1bmN0aW9uICh2YWwpIHtcblx0XHRcdHdpbmRvdy5sb2NhbFN0b3JhZ2UudG9rZW4gPSB2YWwuZGF0YS50b2tlbjtcblx0XHRcdHJldHVybiBzdmMuZ2V0VXNlcih2YWwuZGF0YS50b2tlbik7XG5cdFx0fSk7XG5cdH1cblxuXHRzdmMubG9nb3V0ID0gZnVuY3Rpb24gKCkge1xuXHRcdHdpbmRvdy5sb2NhbFN0b3JhZ2UudG9rZW4gPSBcIlwiO1xuXHRcdCRodHRwLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uW1wiWC1BdXRoXCJdID0gXCJcIjtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXG5cdHN2Yy5jcmVhdGVVc2VyID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuXHRcdHJldHVybiAkaHR0cC5wb3N0KFwiL2FwaS91c2Vyc1wiLCB7XG5cdFx0XHRcInVzZXJuYW1lXCI6IHVzZXJuYW1lLFxuXHRcdFx0XCJwYXNzd29yZFwiOiBwYXNzd29yZFxuXHRcdH0pLnRoZW4oZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIHN2Yy5sb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpO1xuXHRcdH0pO1xuXHR9XG59KTsiLCJhbmd1bGFyLm1vZHVsZShcImFwcFwiKVxuXHQucnVuKGZ1bmN0aW9uICgkcm9vdFNjb3BlLCAkdGltZW91dCkge1xuXHRcdChmdW5jdGlvbiBjb25uZWN0KCkge1xuXHRcdFx0dmFyIHVybCA9IFwid3M6Ly9sb2NhbGhvc3Q6MzAwMFwiO1xuXHRcdFx0dmFyIGNvbm5lY3Rpb24gPSBuZXcgV2ViU29ja2V0KHVybCk7XG5cblx0XHRcdGNvbm5lY3Rpb24ub25jbG9zZSA9IGZ1bmN0aW9uIChlKSB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKFwiV2ViU29ja2V0IGNsb3NlZFwiKTtcblx0XHRcdFx0JHRpbWVvdXQoY29ubmVjdCwgMTAgKiAxMDAwKTtcblx0XHRcdH1cblx0XHRcdGNvbm5lY3Rpb24ub25tZXNzYWdlID0gZnVuY3Rpb24gKGUpIHtcblx0XHRcdFx0Y29uc29sZS5sb2coZSk7XG5cdFx0XHRcdHZhciBwYXlsb2FkID0gSlNPTi5wYXJzZShlLmRhdGEpO1xuXHRcdFx0XHQkcm9vdFNjb3BlLiRicm9hZGNhc3QoXCJ3czpcIiArIHBheWxvYWQudG9waWMsIHBheWxvYWQuZGF0YSk7XG5cdFx0XHR9XG5cdFx0fSkoKTtcblx0fSkiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=