angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc",function(o,t){o.$on("login",function(t,n){o.currentUser=n}),o.logout=function(){o.currentUser="",t.logout()},"undefined"!=typeof window.localStorage.token&&""!==window.localStorage.token&&t.getUser(window.localStorage.token).then(function(t){o.currentUser=t.data})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(o,t){o.login=function(n,e){t.login(n,e).then(function(t){o.$emit("login",t.data)})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(o,t){o.addPost=function(){o.postBody&&t.create({body:o.postBody}).success(function(){o.postBody=null})},t.fetch().success(function(t){o.posts=t}),o.$on("ws:new_post",function(t,n){o.$apply(function(){o.posts.unshift(n)})})}]),angular.module("app").service("PostsSvc",["$http",function(o){this.fetch=function(){return o.get("/api/posts")},this.create=function(t){return o.post("/api/posts",t)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(o,t){o.createUser=function(n,e,r){return e!==r?void alert("Password does not match"):void t.createUser(n,e).then(function(t){o.$emit("login",t.data)})}}]),angular.module("app").config(["$routeProvider",function(o){o.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(o){var t=this;t.getUser=function(t){return o.defaults.headers.common["X-Auth"]=t,o.get("/api/users")},t.login=function(n,e){return o.post("/api/sessions",{username:n,password:e}).then(function(o){return window.localStorage.token=o.data.token,t.getUser(o.data.token)})},t.logout=function(){return window.localStorage.token="",o.defaults.headers.common["X-Auth"]="",!0},t.createUser=function(n,e){return o.post("/api/users",{username:n,password:e}).then(function(){return t.login(n,e)})}}]),angular.module("app").run(["$rootScope",function(o){var t="ws://localhost:3000",n=new WebSocket(t);n.onopen=function(){console.log("WebSocket connected")},n.onmessage=function(t){console.log(t);var n=JSON.parse(t.data);o.$broadcast("ws:"+n.topic,n.data)}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJsb2dpbi5jdHJsLmpzIiwicG9zdHMuY3RybC5qcyIsInBvc3RzLnN2Yy5qcyIsInJlZ2lzdGVyLmN0cmwuanMiLCJyb3V0ZXMuanMiLCJ1c2VyLnN2Yy5qcyIsIndlYnNvY2tldHMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBQSxPQUFBLE9BQ0EsWUNEQSxRQUFBLE9BQUEsT0FDQSxXQUFBLG1CQUFBLFNBQUEsVUFBQSxTQUFBLEVBQUEsR0FFQSxFQUFBLElBQUEsUUFBQSxTQUFBLEVBQUEsR0FDQSxFQUFBLFlBQUEsSUFHQSxFQUFBLE9BQUEsV0FDQSxFQUFBLFlBQUEsR0FDQSxFQUFBLFVBR0EsbUJBQUEsUUFBQSxhQUFBLE9BQUEsS0FBQSxPQUFBLGFBQUEsT0FDQSxFQUFBLFFBQUEsT0FBQSxhQUFBLE9BQ0EsS0FBQSxTQUFBLEdBQ0EsRUFBQSxZQUFBLEVBQUEsVUNmQSxRQUFBLE9BQUEsT0FDQSxXQUFBLGFBQUEsU0FBQSxVQUFBLFNBQUEsRUFBQSxHQUVBLEVBQUEsTUFBQSxTQUFBLEVBQUEsR0FDQSxFQUFBLE1BQUEsRUFBQSxHQUNBLEtBQUEsU0FBQSxHQUNBLEVBQUEsTUFBQSxRQUFBLEVBQUEsWUNOQSxRQUFBLE9BQUEsT0FDQSxXQUFBLGFBQUEsU0FBQSxXQUFBLFNBQUEsRUFBQSxHQUVBLEVBQUEsUUFBQSxXQUNBLEVBQUEsVUFDQSxFQUFBLFFBQ0EsS0FBQSxFQUFBLFdBQ0EsUUFBQSxXQUNBLEVBQUEsU0FBQSxRQUtBLEVBQUEsUUFBQSxRQUFBLFNBQUEsR0FDQSxFQUFBLE1BQUEsSUFHQSxFQUFBLElBQUEsY0FBQSxTQUFBLEVBQUEsR0FDQSxFQUFBLE9BQUEsV0FDQSxFQUFBLE1BQUEsUUFBQSxVQ25CQSxRQUFBLE9BQUEsT0FDQSxRQUFBLFlBQUEsUUFBQSxTQUFBLEdBRUEsS0FBQSxNQUFBLFdBQ0EsTUFBQSxHQUFBLElBQUEsZUFHQSxLQUFBLE9BQUEsU0FBQSxHQUNBLE1BQUEsR0FBQSxLQUFBLGFBQUEsT0NSQSxRQUFBLE9BQUEsT0FDQSxXQUFBLGdCQUFBLFNBQUEsVUFBQSxTQUFBLEVBQUEsR0FFQSxFQUFBLFdBQUEsU0FBQSxFQUFBLEVBQUEsR0FFQSxNQUFBLEtBQUEsTUFDQSxPQUFBLCtCQUlBLEdBQUEsV0FBQSxFQUFBLEdBQ0EsS0FBQSxTQUFBLEdBQ0EsRUFBQSxNQUFBLFFBQUEsRUFBQSxZQ1pBLFFBQUEsT0FBQSxPQUNBLFFBQUEsaUJBQUEsU0FBQSxHQUVBLEVBQ0EsS0FBQSxLQUNBLFdBQUEsWUFDQSxZQUFBLGVBRUEsS0FBQSxhQUNBLFdBQUEsZUFDQSxZQUFBLGtCQUVBLEtBQUEsVUFDQSxXQUFBLFlBQ0EsWUFBQSxrQkNkQSxRQUFBLE9BQUEsT0FDQSxRQUFBLFdBQUEsUUFBQSxTQUFBLEdBRUEsR0FBQSxHQUFBLElBRUEsR0FBQSxRQUFBLFNBQUEsR0FFQSxNQURBLEdBQUEsU0FBQSxRQUFBLE9BQUEsVUFBQSxFQUNBLEVBQUEsSUFBQSxlQUdBLEVBQUEsTUFBQSxTQUFBLEVBQUEsR0FDQSxNQUFBLEdBQUEsS0FBQSxpQkFDQSxTQUFBLEVBQ0EsU0FBQSxJQUNBLEtBQUEsU0FBQSxHQUVBLE1BREEsUUFBQSxhQUFBLE1BQUEsRUFBQSxLQUFBLE1BQ0EsRUFBQSxRQUFBLEVBQUEsS0FBQSxVQUlBLEVBQUEsT0FBQSxXQUdBLE1BRkEsUUFBQSxhQUFBLE1BQUEsR0FDQSxFQUFBLFNBQUEsUUFBQSxPQUFBLFVBQUEsSUFDQSxHQUdBLEVBQUEsV0FBQSxTQUFBLEVBQUEsR0FDQSxNQUFBLEdBQUEsS0FBQSxjQUNBLFNBQUEsRUFDQSxTQUFBLElBQ0EsS0FBQSxXQUNBLE1BQUEsR0FBQSxNQUFBLEVBQUEsU0MvQkEsUUFBQSxPQUFBLE9BQ0EsS0FBQSxhQUFBLFNBQUEsR0FDQSxHQUFBLEdBQUEsc0JBQ0EsRUFBQSxHQUFBLFdBQUEsRUFFQSxHQUFBLE9BQUEsV0FDQSxRQUFBLElBQUEsd0JBR0EsRUFBQSxVQUFBLFNBQUEsR0FDQSxRQUFBLElBQUEsRUFDQSxJQUFBLEdBQUEsS0FBQSxNQUFBLEVBQUEsS0FDQSxHQUFBLFdBQUEsTUFBQSxFQUFBLE1BQUEsRUFBQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZShcImFwcFwiLCBbXG5cdFwibmdSb3V0ZVwiXG5dKTsiLCJhbmd1bGFyLm1vZHVsZShcImFwcFwiKVxuLmNvbnRyb2xsZXIoXCJBcHBsaWNhdGlvbkN0cmxcIiwgZnVuY3Rpb24gKCRzY29wZSwgVXNlclN2Yykge1xuXG5cdCRzY29wZS4kb24oXCJsb2dpblwiLCBmdW5jdGlvbiAoXywgdXNlcikge1xuXHRcdCRzY29wZS5jdXJyZW50VXNlciA9IHVzZXI7XG5cdH0pO1xuXG5cdCRzY29wZS5sb2dvdXQgPSBmdW5jdGlvbiAoKSB7XG5cdFx0JHNjb3BlLmN1cnJlbnRVc2VyID0gXCJcIjtcblx0XHRVc2VyU3ZjLmxvZ291dCgpO1xuXHR9O1xuXG5cdGlmICh0eXBlb2Ygd2luZG93LmxvY2FsU3RvcmFnZS50b2tlbiAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cubG9jYWxTdG9yYWdlLnRva2VuICE9PSBcIlwiKSB7XG5cdFx0VXNlclN2Yy5nZXRVc2VyKHdpbmRvdy5sb2NhbFN0b3JhZ2UudG9rZW4pXG5cdFx0XHQudGhlbihmdW5jdGlvbiAodXNlcikge1xuXHRcdFx0XHQkc2NvcGUuY3VycmVudFVzZXIgPSB1c2VyLmRhdGE7XG5cdFx0XHR9KTtcblx0fVxufSk7IiwiYW5ndWxhci5tb2R1bGUoXCJhcHBcIilcbi5jb250cm9sbGVyKFwiTG9naW5DdHJsXCIsIGZ1bmN0aW9uICgkc2NvcGUsIFVzZXJTdmMpIHtcblxuXHQkc2NvcGUubG9naW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG5cdFx0VXNlclN2Yy5sb2dpbih1c2VybmFtZSwgcGFzc3dvcmQpXG5cdFx0XHQudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcblx0XHRcdFx0JHNjb3BlLiRlbWl0KFwibG9naW5cIiwgcmVzcG9uc2UuZGF0YSk7XG5cdFx0XHR9KTtcblx0fVxufSk7IiwiYW5ndWxhci5tb2R1bGUoXCJhcHBcIilcbi5jb250cm9sbGVyKFwiUG9zdHNDdHJsXCIsIGZ1bmN0aW9uICgkc2NvcGUsIFBvc3RzU3ZjKSB7XG5cblx0JHNjb3BlLmFkZFBvc3QgPSBmdW5jdGlvbigpIHtcblx0XHRpZiAoJHNjb3BlLnBvc3RCb2R5KSB7XG5cdFx0XHRQb3N0c1N2Yy5jcmVhdGUoe1xuXHRcdFx0XHRib2R5OiAkc2NvcGUucG9zdEJvZHlcblx0XHRcdH0pLnN1Y2Nlc3MoZnVuY3Rpb24gKHBvc3QpIHtcblx0XHRcdFx0JHNjb3BlLnBvc3RCb2R5ID0gbnVsbDtcblx0XHRcdH0pXG5cdFx0fVxuXHR9XG5cblx0UG9zdHNTdmMuZmV0Y2goKS5zdWNjZXNzKGZ1bmN0aW9uIChwb3N0cykge1xuXHRcdCRzY29wZS5wb3N0cyA9IHBvc3RzO1xuXHR9KTtcblxuXHQkc2NvcGUuJG9uKFwid3M6bmV3X3Bvc3RcIiwgZnVuY3Rpb24gKF8sIHBvc3QpIHtcblx0XHQkc2NvcGUuJGFwcGx5KGZ1bmN0aW9uICgpIHtcblx0XHRcdCRzY29wZS5wb3N0cy51bnNoaWZ0KHBvc3QpXG5cdFx0fSlcblx0fSk7XG59KTsiLCJhbmd1bGFyLm1vZHVsZShcImFwcFwiKVxuLnNlcnZpY2UoXCJQb3N0c1N2Y1wiLCBmdW5jdGlvbiAoJGh0dHApIHtcblxuXHR0aGlzLmZldGNoID0gZnVuY3Rpb24gKCkge1xuXHRcdHJldHVybiAkaHR0cC5nZXQoXCIvYXBpL3Bvc3RzXCIpO1xuXHR9XG5cblx0dGhpcy5jcmVhdGUgPSBmdW5jdGlvbiAocG9zdCkge1xuXHRcdHJldHVybiAkaHR0cC5wb3N0KFwiL2FwaS9wb3N0c1wiLCBwb3N0KTtcblx0fVxufSk7IiwiYW5ndWxhci5tb2R1bGUoXCJhcHBcIilcbi5jb250cm9sbGVyKFwiUmVnaXN0ZXJDdHJsXCIsIGZ1bmN0aW9uICgkc2NvcGUsIFVzZXJTdmMpIHtcblxuXHQkc2NvcGUuY3JlYXRlVXNlciA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQsIGNvbmZpcm0pIHtcblxuXHRcdGlmIChwYXNzd29yZCAhPT0gY29uZmlybSkge1xuXHRcdFx0YWxlcnQoXCJQYXNzd29yZCBkb2VzIG5vdCBtYXRjaFwiKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRVc2VyU3ZjLmNyZWF0ZVVzZXIodXNlcm5hbWUsIHBhc3N3b3JkKVxuXHRcdFx0LnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG5cdFx0XHRcdCRzY29wZS4kZW1pdChcImxvZ2luXCIsIHJlc3BvbnNlLmRhdGEpO1xuXHRcdFx0fSk7XG5cdH1cbn0pOyIsImFuZ3VsYXIubW9kdWxlKFwiYXBwXCIpXG5cdC5jb25maWcoZnVuY3Rpb24gKCRyb3V0ZVByb3ZpZGVyKSB7XG5cblx0XHQkcm91dGVQcm92aWRlclxuXHRcdC53aGVuKFwiL1wiLCB7XG5cdFx0XHRcImNvbnRyb2xsZXJcIjogXCJQb3N0c0N0cmxcIixcblx0XHRcdFwidGVtcGxhdGVVcmxcIjogXCJwb3N0cy5odG1sXCJcblx0XHR9KVxuXHRcdC53aGVuKFwiL3JlZ2lzdGVyXCIsIHtcblx0XHRcdFwiY29udHJvbGxlclwiOiBcIlJlZ2lzdGVyQ3RybFwiLFxuXHRcdFx0XCJ0ZW1wbGF0ZVVybFwiOiBcInJlZ2lzdGVyLmh0bWxcIlxuXHRcdH0pXG5cdFx0LndoZW4oXCIvbG9naW5cIiwge1xuXHRcdFx0XCJjb250cm9sbGVyXCI6IFwiTG9naW5DdHJsXCIsXG5cdFx0XHRcInRlbXBsYXRlVXJsXCI6IFwibG9naW4uaHRtbFwiXG5cdFx0fSlcblx0fSk7IiwiYW5ndWxhci5tb2R1bGUoXCJhcHBcIilcbi5zZXJ2aWNlKFwiVXNlclN2Y1wiLCBmdW5jdGlvbiAoJGh0dHApIHtcblxuXHR2YXIgc3ZjID0gdGhpcztcblxuXHRzdmMuZ2V0VXNlciA9IGZ1bmN0aW9uICh0b2tlbikge1xuXHRcdCRodHRwLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uW1wiWC1BdXRoXCJdID0gdG9rZW47XG5cdFx0cmV0dXJuICRodHRwLmdldChcIi9hcGkvdXNlcnNcIik7XG5cdH1cblxuXHRzdmMubG9naW4gPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG5cdFx0cmV0dXJuICRodHRwLnBvc3QoXCIvYXBpL3Nlc3Npb25zXCIsIHtcblx0XHRcdFwidXNlcm5hbWVcIjogdXNlcm5hbWUsXG5cdFx0XHRcInBhc3N3b3JkXCI6IHBhc3N3b3JkXG5cdFx0fSkudGhlbihmdW5jdGlvbiAodmFsKSB7XG5cdFx0XHR3aW5kb3cubG9jYWxTdG9yYWdlLnRva2VuID0gdmFsLmRhdGEudG9rZW47XG5cdFx0XHRyZXR1cm4gc3ZjLmdldFVzZXIodmFsLmRhdGEudG9rZW4pO1xuXHRcdH0pO1xuXHR9XG5cblx0c3ZjLmxvZ291dCA9IGZ1bmN0aW9uICgpIHtcblx0XHR3aW5kb3cubG9jYWxTdG9yYWdlLnRva2VuID0gXCJcIjtcblx0XHQkaHR0cC5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vbltcIlgtQXV0aFwiXSA9IFwiXCI7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cblxuXHRzdmMuY3JlYXRlVXNlciA9IGZ1bmN0aW9uICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcblx0XHRyZXR1cm4gJGh0dHAucG9zdChcIi9hcGkvdXNlcnNcIiwge1xuXHRcdFx0XCJ1c2VybmFtZVwiOiB1c2VybmFtZSxcblx0XHRcdFwicGFzc3dvcmRcIjogcGFzc3dvcmRcblx0XHR9KS50aGVuKGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBzdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKTtcblx0XHR9KTtcblx0fVxufSk7IiwiYW5ndWxhci5tb2R1bGUoXCJhcHBcIilcblx0LnJ1bihmdW5jdGlvbiAoJHJvb3RTY29wZSkge1xuXHRcdHZhciB1cmwgPSBcIndzOi8vbG9jYWxob3N0OjMwMDBcIjtcblx0XHR2YXIgY29ubmVjdGlvbiA9IG5ldyBXZWJTb2NrZXQodXJsKTtcblxuXHRcdGNvbm5lY3Rpb24ub25vcGVuID0gZnVuY3Rpb24gKCkge1xuXHRcdFx0Y29uc29sZS5sb2coXCJXZWJTb2NrZXQgY29ubmVjdGVkXCIpO1xuXHRcdH1cblxuXHRcdGNvbm5lY3Rpb24ub25tZXNzYWdlID0gZnVuY3Rpb24gKGUpIHtcblx0XHRcdGNvbnNvbGUubG9nKGUpO1xuXHRcdFx0dmFyIHBheWxvYWQgPSBKU09OLnBhcnNlKGUuZGF0YSk7XG5cdFx0XHQkcm9vdFNjb3BlLiRicm9hZGNhc3QoXCJ3czpcIiArIHBheWxvYWQudG9waWMsIHBheWxvYWQuZGF0YSk7XG5cdFx0fVxuXHR9KSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==