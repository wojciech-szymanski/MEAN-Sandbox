angular.module("app",["ngRoute"]),angular.module("app").controller("ApplicationCtrl",["$scope","UserSvc",function(t,o){t.$on("login",function(o,e){t.currentUser=e}),t.logout=function(){t.currentUser="",o.logout()},"undefined"!=typeof window.localStorage.token&&""!==window.localStorage.token&&o.getUser(window.localStorage.token).then(function(o){t.currentUser=o.data})}]),angular.module("app").controller("LoginCtrl",["$scope","UserSvc",function(t,o){t.login=function(e,n){o.login(e,n).then(function(o){t.$emit("login",o.data)})}}]),angular.module("app").controller("PostsCtrl",["$scope","PostsSvc",function(t,o){t.addPost=function(){t.postBody&&o.create({body:t.postBody}).success(function(o){t.posts.unshift(o),t.postBody=null})},o.fetch().success(function(o){t.posts=o})}]),angular.module("app").service("PostsSvc",["$http",function(t){this.fetch=function(){return t.get("/api/posts")},this.create=function(o){return t.post("/api/posts",o)}}]),angular.module("app").controller("RegisterCtrl",["$scope","UserSvc",function(t,o){t.createUser=function(e,n,r){return n!==r?void alert("Password does not match"):void o.createUser(e,n).then(function(o){t.$emit("login",o.data)})}}]),angular.module("app").config(["$routeProvider",function(t){t.when("/",{controller:"PostsCtrl",templateUrl:"posts.html"}).when("/register",{controller:"RegisterCtrl",templateUrl:"register.html"}).when("/login",{controller:"LoginCtrl",templateUrl:"login.html"})}]),angular.module("app").service("UserSvc",["$http",function(t){var o=this;o.getUser=function(o){return t.defaults.headers.common["X-Auth"]=o,t.get("/api/users")},o.login=function(e,n){return t.post("/api/sessions",{username:e,password:n}).then(function(t){return window.localStorage.token=t.data.token,o.getUser(t.data.token)})},o.logout=function(){return window.localStorage.token="",t.defaults.headers.common["X-Auth"]="",!0},o.createUser=function(e,n){return t.post("/api/users",{username:e,password:n}).then(function(){return o.login(e,n)})}}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImFwcGxpY2F0aW9uLmN0cmwuanMiLCJsb2dpbi5jdHJsLmpzIiwicG9zdHMuY3RybC5qcyIsInBvc3RzLnN2Yy5qcyIsInJlZ2lzdGVyLmN0cmwuanMiLCJyb3V0ZXMuanMiLCJ1c2VyLnN2Yy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxRQUFBLE9BQUEsT0FDQSxZQ0RBLFFBQUEsT0FBQSxPQUNBLFdBQUEsbUJBQUEsU0FBQSxVQUFBLFNBQUEsRUFBQSxHQUVBLEVBQUEsSUFBQSxRQUFBLFNBQUEsRUFBQSxHQUNBLEVBQUEsWUFBQSxJQUdBLEVBQUEsT0FBQSxXQUNBLEVBQUEsWUFBQSxHQUNBLEVBQUEsVUFHQSxtQkFBQSxRQUFBLGFBQUEsT0FBQSxLQUFBLE9BQUEsYUFBQSxPQUNBLEVBQUEsUUFBQSxPQUFBLGFBQUEsT0FDQSxLQUFBLFNBQUEsR0FDQSxFQUFBLFlBQUEsRUFBQSxVQ2ZBLFFBQUEsT0FBQSxPQUNBLFdBQUEsYUFBQSxTQUFBLFVBQUEsU0FBQSxFQUFBLEdBRUEsRUFBQSxNQUFBLFNBQUEsRUFBQSxHQUNBLEVBQUEsTUFBQSxFQUFBLEdBQ0EsS0FBQSxTQUFBLEdBQ0EsRUFBQSxNQUFBLFFBQUEsRUFBQSxZQ05BLFFBQUEsT0FBQSxPQUNBLFdBQUEsYUFBQSxTQUFBLFdBQUEsU0FBQSxFQUFBLEdBRUEsRUFBQSxRQUFBLFdBQ0EsRUFBQSxVQUNBLEVBQUEsUUFDQSxLQUFBLEVBQUEsV0FDQSxRQUFBLFNBQUEsR0FDQSxFQUFBLE1BQUEsUUFBQSxHQUNBLEVBQUEsU0FBQSxRQUtBLEVBQUEsUUFBQSxRQUFBLFNBQUEsR0FDQSxFQUFBLE1BQUEsT0NmQSxRQUFBLE9BQUEsT0FDQSxRQUFBLFlBQUEsUUFBQSxTQUFBLEdBRUEsS0FBQSxNQUFBLFdBQ0EsTUFBQSxHQUFBLElBQUEsZUFHQSxLQUFBLE9BQUEsU0FBQSxHQUNBLE1BQUEsR0FBQSxLQUFBLGFBQUEsT0NSQSxRQUFBLE9BQUEsT0FDQSxXQUFBLGdCQUFBLFNBQUEsVUFBQSxTQUFBLEVBQUEsR0FFQSxFQUFBLFdBQUEsU0FBQSxFQUFBLEVBQUEsR0FFQSxNQUFBLEtBQUEsTUFDQSxPQUFBLCtCQUlBLEdBQUEsV0FBQSxFQUFBLEdBQ0EsS0FBQSxTQUFBLEdBQ0EsRUFBQSxNQUFBLFFBQUEsRUFBQSxZQ1pBLFFBQUEsT0FBQSxPQUNBLFFBQUEsaUJBQUEsU0FBQSxHQUVBLEVBQ0EsS0FBQSxLQUNBLFdBQUEsWUFDQSxZQUFBLGVBRUEsS0FBQSxhQUNBLFdBQUEsZUFDQSxZQUFBLGtCQUVBLEtBQUEsVUFDQSxXQUFBLFlBQ0EsWUFBQSxrQkNkQSxRQUFBLE9BQUEsT0FDQSxRQUFBLFdBQUEsUUFBQSxTQUFBLEdBRUEsR0FBQSxHQUFBLElBRUEsR0FBQSxRQUFBLFNBQUEsR0FFQSxNQURBLEdBQUEsU0FBQSxRQUFBLE9BQUEsVUFBQSxFQUNBLEVBQUEsSUFBQSxlQUdBLEVBQUEsTUFBQSxTQUFBLEVBQUEsR0FDQSxNQUFBLEdBQUEsS0FBQSxpQkFDQSxTQUFBLEVBQ0EsU0FBQSxJQUNBLEtBQUEsU0FBQSxHQUVBLE1BREEsUUFBQSxhQUFBLE1BQUEsRUFBQSxLQUFBLE1BQ0EsRUFBQSxRQUFBLEVBQUEsS0FBQSxVQUlBLEVBQUEsT0FBQSxXQUdBLE1BRkEsUUFBQSxhQUFBLE1BQUEsR0FDQSxFQUFBLFNBQUEsUUFBQSxPQUFBLFVBQUEsSUFDQSxHQUdBLEVBQUEsV0FBQSxTQUFBLEVBQUEsR0FDQSxNQUFBLEdBQUEsS0FBQSxjQUNBLFNBQUEsRUFDQSxTQUFBLElBQ0EsS0FBQSxXQUNBLE1BQUEsR0FBQSxNQUFBLEVBQUEiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoXCJhcHBcIiwgW1xuXHRcIm5nUm91dGVcIlxuXSk7IiwiYW5ndWxhci5tb2R1bGUoXCJhcHBcIilcbi5jb250cm9sbGVyKFwiQXBwbGljYXRpb25DdHJsXCIsIGZ1bmN0aW9uICgkc2NvcGUsIFVzZXJTdmMpIHtcblxuXHQkc2NvcGUuJG9uKFwibG9naW5cIiwgZnVuY3Rpb24gKF8sIHVzZXIpIHtcblx0XHQkc2NvcGUuY3VycmVudFVzZXIgPSB1c2VyO1xuXHR9KTtcblxuXHQkc2NvcGUubG9nb3V0ID0gZnVuY3Rpb24gKCkge1xuXHRcdCRzY29wZS5jdXJyZW50VXNlciA9IFwiXCI7XG5cdFx0VXNlclN2Yy5sb2dvdXQoKTtcblx0fTtcblxuXHRpZiAodHlwZW9mIHdpbmRvdy5sb2NhbFN0b3JhZ2UudG9rZW4gIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2FsU3RvcmFnZS50b2tlbiAhPT0gXCJcIikge1xuXHRcdFVzZXJTdmMuZ2V0VXNlcih3aW5kb3cubG9jYWxTdG9yYWdlLnRva2VuKVxuXHRcdFx0LnRoZW4oZnVuY3Rpb24gKHVzZXIpIHtcblx0XHRcdFx0JHNjb3BlLmN1cnJlbnRVc2VyID0gdXNlci5kYXRhO1xuXHRcdFx0fSk7XG5cdH1cbn0pOyIsImFuZ3VsYXIubW9kdWxlKFwiYXBwXCIpXG4uY29udHJvbGxlcihcIkxvZ2luQ3RybFwiLCBmdW5jdGlvbiAoJHNjb3BlLCBVc2VyU3ZjKSB7XG5cblx0JHNjb3BlLmxvZ2luID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuXHRcdFVzZXJTdmMubG9naW4odXNlcm5hbWUsIHBhc3N3b3JkKVxuXHRcdFx0LnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG5cdFx0XHRcdCRzY29wZS4kZW1pdChcImxvZ2luXCIsIHJlc3BvbnNlLmRhdGEpO1xuXHRcdFx0fSk7XG5cdH1cbn0pOyIsImFuZ3VsYXIubW9kdWxlKFwiYXBwXCIpXG4uY29udHJvbGxlcihcIlBvc3RzQ3RybFwiLCBmdW5jdGlvbiAoJHNjb3BlLCBQb3N0c1N2Yykge1xuXG5cdCRzY29wZS5hZGRQb3N0ID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCRzY29wZS5wb3N0Qm9keSkge1xuXHRcdFx0UG9zdHNTdmMuY3JlYXRlKHtcblx0XHRcdFx0Ym9keTogJHNjb3BlLnBvc3RCb2R5XG5cdFx0XHR9KS5zdWNjZXNzKGZ1bmN0aW9uIChwb3N0KSB7XG5cdFx0XHRcdCRzY29wZS5wb3N0cy51bnNoaWZ0KHBvc3QpO1xuXHRcdFx0XHQkc2NvcGUucG9zdEJvZHkgPSBudWxsO1xuXHRcdFx0fSlcblx0XHR9XG5cdH1cblxuXHRQb3N0c1N2Yy5mZXRjaCgpLnN1Y2Nlc3MoZnVuY3Rpb24gKHBvc3RzKSB7XG5cdFx0JHNjb3BlLnBvc3RzID0gcG9zdHM7XG5cdH0pO1xufSk7IiwiYW5ndWxhci5tb2R1bGUoXCJhcHBcIilcbi5zZXJ2aWNlKFwiUG9zdHNTdmNcIiwgZnVuY3Rpb24gKCRodHRwKSB7XG5cblx0dGhpcy5mZXRjaCA9IGZ1bmN0aW9uICgpIHtcblx0XHRyZXR1cm4gJGh0dHAuZ2V0KFwiL2FwaS9wb3N0c1wiKTtcblx0fVxuXG5cdHRoaXMuY3JlYXRlID0gZnVuY3Rpb24gKHBvc3QpIHtcblx0XHRyZXR1cm4gJGh0dHAucG9zdChcIi9hcGkvcG9zdHNcIiwgcG9zdCk7XG5cdH1cbn0pOyIsImFuZ3VsYXIubW9kdWxlKFwiYXBwXCIpXG4uY29udHJvbGxlcihcIlJlZ2lzdGVyQ3RybFwiLCBmdW5jdGlvbiAoJHNjb3BlLCBVc2VyU3ZjKSB7XG5cblx0JHNjb3BlLmNyZWF0ZVVzZXIgPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkLCBjb25maXJtKSB7XG5cblx0XHRpZiAocGFzc3dvcmQgIT09IGNvbmZpcm0pIHtcblx0XHRcdGFsZXJ0KFwiUGFzc3dvcmQgZG9lcyBub3QgbWF0Y2hcIik7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0VXNlclN2Yy5jcmVhdGVVc2VyKHVzZXJuYW1lLCBwYXNzd29yZClcblx0XHRcdC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuXHRcdFx0XHQkc2NvcGUuJGVtaXQoXCJsb2dpblwiLCByZXNwb25zZS5kYXRhKTtcblx0XHRcdH0pO1xuXHR9XG59KTsiLCJhbmd1bGFyLm1vZHVsZShcImFwcFwiKVxuXHQuY29uZmlnKGZ1bmN0aW9uICgkcm91dGVQcm92aWRlcikge1xuXG5cdFx0JHJvdXRlUHJvdmlkZXJcblx0XHQud2hlbihcIi9cIiwge1xuXHRcdFx0XCJjb250cm9sbGVyXCI6IFwiUG9zdHNDdHJsXCIsXG5cdFx0XHRcInRlbXBsYXRlVXJsXCI6IFwicG9zdHMuaHRtbFwiXG5cdFx0fSlcblx0XHQud2hlbihcIi9yZWdpc3RlclwiLCB7XG5cdFx0XHRcImNvbnRyb2xsZXJcIjogXCJSZWdpc3RlckN0cmxcIixcblx0XHRcdFwidGVtcGxhdGVVcmxcIjogXCJyZWdpc3Rlci5odG1sXCJcblx0XHR9KVxuXHRcdC53aGVuKFwiL2xvZ2luXCIsIHtcblx0XHRcdFwiY29udHJvbGxlclwiOiBcIkxvZ2luQ3RybFwiLFxuXHRcdFx0XCJ0ZW1wbGF0ZVVybFwiOiBcImxvZ2luLmh0bWxcIlxuXHRcdH0pXG5cdH0pOyIsImFuZ3VsYXIubW9kdWxlKFwiYXBwXCIpXG4uc2VydmljZShcIlVzZXJTdmNcIiwgZnVuY3Rpb24gKCRodHRwKSB7XG5cblx0dmFyIHN2YyA9IHRoaXM7XG5cblx0c3ZjLmdldFVzZXIgPSBmdW5jdGlvbiAodG9rZW4pIHtcblx0XHQkaHR0cC5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vbltcIlgtQXV0aFwiXSA9IHRva2VuO1xuXHRcdHJldHVybiAkaHR0cC5nZXQoXCIvYXBpL3VzZXJzXCIpO1xuXHR9XG5cblx0c3ZjLmxvZ2luID0gZnVuY3Rpb24gKHVzZXJuYW1lLCBwYXNzd29yZCkge1xuXHRcdHJldHVybiAkaHR0cC5wb3N0KFwiL2FwaS9zZXNzaW9uc1wiLCB7XG5cdFx0XHRcInVzZXJuYW1lXCI6IHVzZXJuYW1lLFxuXHRcdFx0XCJwYXNzd29yZFwiOiBwYXNzd29yZFxuXHRcdH0pLnRoZW4oZnVuY3Rpb24gKHZhbCkge1xuXHRcdFx0d2luZG93LmxvY2FsU3RvcmFnZS50b2tlbiA9IHZhbC5kYXRhLnRva2VuO1xuXHRcdFx0cmV0dXJuIHN2Yy5nZXRVc2VyKHZhbC5kYXRhLnRva2VuKTtcblx0XHR9KTtcblx0fVxuXG5cdHN2Yy5sb2dvdXQgPSBmdW5jdGlvbiAoKSB7XG5cdFx0d2luZG93LmxvY2FsU3RvcmFnZS50b2tlbiA9IFwiXCI7XG5cdFx0JGh0dHAuZGVmYXVsdHMuaGVhZGVycy5jb21tb25bXCJYLUF1dGhcIl0gPSBcIlwiO1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0c3ZjLmNyZWF0ZVVzZXIgPSBmdW5jdGlvbiAodXNlcm5hbWUsIHBhc3N3b3JkKSB7XG5cdFx0cmV0dXJuICRodHRwLnBvc3QoXCIvYXBpL3VzZXJzXCIsIHtcblx0XHRcdFwidXNlcm5hbWVcIjogdXNlcm5hbWUsXG5cdFx0XHRcInBhc3N3b3JkXCI6IHBhc3N3b3JkXG5cdFx0fSkudGhlbihmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gc3ZjLmxvZ2luKHVzZXJuYW1lLCBwYXNzd29yZCk7XG5cdFx0fSk7XG5cdH1cbn0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==